int main(void) {
    // GPIO
    // Enable clock access
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;

    // PA2 Alternate function mode ([5:4] bit is [1:0])
    GPIOA->MODER &= ~GPIO_MODER_MODER2_0; // 4-th bit
    GPIOA->MODER |=  GPIO_MODER_MODER2_1; // 5-th bit

    // Select alternate function AF7 (0111) for USART2
    GPIOA->AFR[0] |=  GPIO_AFRL_AFRL2_0;
    GPIOA->AFR[0] |=  GPIO_AFRL_AFRL2_1;
    GPIOA->AFR[0] |=  GPIO_AFRL_AFRL2_2;
    GPIOA->AFR[0] &= ~GPIO_AFRL_AFRL2_3;

    // UART
    // Enable clock access
    RCC->APB1ENR |= RCC_APB1ENR_USART2EN;

    // Configure baud rate
    USART2->BRR = ((freq + (baud/2U))/baud);

    // Configure transfer direction
    USART2->CR1 = USART_CR1_TE;

    // Enable UART module
    USART2->CR1 |= USART_CR1_UE;
	
	LVQ_GPIO_Init(GPIOA, GPIO_PIN_5, LVQ_GPIO_Mode_OUT, LVQ_GPIO_OType_PP, LVQ_GPIO_PuPd_NOPULL, LVQ_GPIO_Speed_High);

	CHECK_RESULT(1, 2);
	
    while (1) {
        _write("Hello There (-.-)\n\r", 19);
        Delay(1000000);
		LVQ_GPIO_SetPinLow(GPIOA, GPIO_PIN_5);
		Delay(1000000);
		LVQ_GPIO_SetPinHigh(GPIOA, GPIO_PIN_5);
		Delay(1000000);
    }
}